# -*- coding: utf-8 -*-
"""Untitled13.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1EOLRAKjzJ6LYTDJF8UDDsRSOmO7hAi7v
"""

!pip install --upgrade pip
!pip install --upgrade git+https://github.com/huggingface/transformers.git accelerate datasets[audio]

import torch
from transformers import AutoModelForSpeechSeq2Seq, AutoProcessor, pipeline

device = "cuda:0" if torch.cuda.is_available() else "cpu"
torch_dtype = torch.float16 if torch.cuda.is_available() else torch.float32

model_id = "openai/whisper-large-v3"

model = AutoModelForSpeechSeq2Seq.from_pretrained(
    model_id, torch_dtype=torch_dtype, low_cpu_mem_usage=True, use_safetensors=True
)
model.to(device)

processor = AutoProcessor.from_pretrained(model_id)

pipe = pipeline(
    "automatic-speech-recognition",
    model=model,
    tokenizer=processor.tokenizer,
    feature_extractor=processor.feature_extractor,
    max_new_tokens=128,
    chunk_length_s=30,
    batch_size=16,
    return_timestamps=True,
    torch_dtype=torch_dtype,
    device=device,
)

audio = "/content/common_voice_mr_27593281.wav"

result = pipe(audio)

result['text']

def get_transcription(filename:str):
  transcription = result['text']
  return transcription

filename =  "/content/common_voice_mr_27591987.wav"
transcription = get_transcription(filename)
print(f"Transcription: {transcription}")

"""## WORD ERROR RATE(WER)"""

!pip install jiwer

import jiwer

def calculate_wer(reference, hypothesis):

    return jiwer.wer(reference, hypothesis)


reference_text = "कोणतीही खंत वा खिन्नता एकलव्याच्या मुखावर उमटली नाही"
transcribed_text =  "ਕੁਣਤੀ ਖਨਤਵਾ ਖੀਨਤਾ ਏਕਰਵਗਾ ਚੇ ਮੁਖਾਵਰ ਮਟਲੀ ਨਹੀ।"

wer = calculate_wer(reference_text, transcribed_text)
print(f"Word Error Rate: {wer}")